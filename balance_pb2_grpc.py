# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import balance_pb2 as balance__pb2


class BalanceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendOp = channel.unary_unary(
                '/Balance/SendOp',
                request_serializer=balance__pb2.SolicitudSend.SerializeToString,
                response_deserializer=balance__pb2.RespuestaSend.FromString,
                )
        self.Operacion = channel.unary_unary(
                '/Balance/Operacion',
                request_serializer=balance__pb2.SolicitudOperacion.SerializeToString,
                response_deserializer=balance__pb2.RespuestaOperacion.FromString,
                )
        self.Create = channel.unary_unary(
                '/Balance/Create',
                request_serializer=balance__pb2.SolicitudCreate.SerializeToString,
                response_deserializer=balance__pb2.RespuestaCreate.FromString,
                )
        self.Read = channel.unary_stream(
                '/Balance/Read',
                request_serializer=balance__pb2.SolicitudRead.SerializeToString,
                response_deserializer=balance__pb2.RespuestaRead.FromString,
                )
        self.Write = channel.unary_unary(
                '/Balance/Write',
                request_serializer=balance__pb2.SolicitudWrite.SerializeToString,
                response_deserializer=balance__pb2.RespuestaWrite.FromString,
                )
        self.Create2 = channel.unary_unary(
                '/Balance/Create2',
                request_serializer=balance__pb2.SolicitudCreate2.SerializeToString,
                response_deserializer=balance__pb2.RespuestaCreate2.FromString,
                )
        self.Read2 = channel.unary_stream(
                '/Balance/Read2',
                request_serializer=balance__pb2.SolicitudRead2.SerializeToString,
                response_deserializer=balance__pb2.RespuestaRead2.FromString,
                )
        self.Write2 = channel.unary_unary(
                '/Balance/Write2',
                request_serializer=balance__pb2.SolicitudWrite2.SerializeToString,
                response_deserializer=balance__pb2.RespuestaWrite2.FromString,
                )


class BalanceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendOp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Operacion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Write(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Write2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BalanceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendOp': grpc.unary_unary_rpc_method_handler(
                    servicer.SendOp,
                    request_deserializer=balance__pb2.SolicitudSend.FromString,
                    response_serializer=balance__pb2.RespuestaSend.SerializeToString,
            ),
            'Operacion': grpc.unary_unary_rpc_method_handler(
                    servicer.Operacion,
                    request_deserializer=balance__pb2.SolicitudOperacion.FromString,
                    response_serializer=balance__pb2.RespuestaOperacion.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=balance__pb2.SolicitudCreate.FromString,
                    response_serializer=balance__pb2.RespuestaCreate.SerializeToString,
            ),
            'Read': grpc.unary_stream_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=balance__pb2.SolicitudRead.FromString,
                    response_serializer=balance__pb2.RespuestaRead.SerializeToString,
            ),
            'Write': grpc.unary_unary_rpc_method_handler(
                    servicer.Write,
                    request_deserializer=balance__pb2.SolicitudWrite.FromString,
                    response_serializer=balance__pb2.RespuestaWrite.SerializeToString,
            ),
            'Create2': grpc.unary_unary_rpc_method_handler(
                    servicer.Create2,
                    request_deserializer=balance__pb2.SolicitudCreate2.FromString,
                    response_serializer=balance__pb2.RespuestaCreate2.SerializeToString,
            ),
            'Read2': grpc.unary_stream_rpc_method_handler(
                    servicer.Read2,
                    request_deserializer=balance__pb2.SolicitudRead2.FromString,
                    response_serializer=balance__pb2.RespuestaRead2.SerializeToString,
            ),
            'Write2': grpc.unary_unary_rpc_method_handler(
                    servicer.Write2,
                    request_deserializer=balance__pb2.SolicitudWrite2.FromString,
                    response_serializer=balance__pb2.RespuestaWrite2.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Balance', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Balance(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendOp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Balance/SendOp',
            balance__pb2.SolicitudSend.SerializeToString,
            balance__pb2.RespuestaSend.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Operacion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Balance/Operacion',
            balance__pb2.SolicitudOperacion.SerializeToString,
            balance__pb2.RespuestaOperacion.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Balance/Create',
            balance__pb2.SolicitudCreate.SerializeToString,
            balance__pb2.RespuestaCreate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Balance/Read',
            balance__pb2.SolicitudRead.SerializeToString,
            balance__pb2.RespuestaRead.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Write(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Balance/Write',
            balance__pb2.SolicitudWrite.SerializeToString,
            balance__pb2.RespuestaWrite.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Balance/Create2',
            balance__pb2.SolicitudCreate2.SerializeToString,
            balance__pb2.RespuestaCreate2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Read2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Balance/Read2',
            balance__pb2.SolicitudRead2.SerializeToString,
            balance__pb2.RespuestaRead2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Write2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Balance/Write2',
            balance__pb2.SolicitudWrite2.SerializeToString,
            balance__pb2.RespuestaWrite2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
